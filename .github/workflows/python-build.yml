name: Generate PyInstaller

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build package
      run: pyinstaller -F --additional-hooks-dir=./pyinstaller main.py
    - name: Upload artifact (Windows)
      uses: actions/upload-artifact@v4
      if: runner.os == 'windows'
      with:
          name: aeu-${{ runner.os }}-${{ runner.arch }}.exe
          path: dist/main.exe
    - name: Upload artifact (Unix)
      uses: actions/upload-artifact@v4
    - if: runner.os != 'windows'
      with:
          name: aeu-${{ runner.os }}-${{ runner.arch }}
          path: dist/main
